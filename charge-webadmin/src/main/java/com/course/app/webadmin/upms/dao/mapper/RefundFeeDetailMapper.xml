<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.app.webadmin.upms.dao.RefundFeeDetailMapper">
    <resultMap id="BaseResultMap" type="com.course.app.webadmin.upms.model.RefundFeeDetail">
        <id column="refund_mer_tran_no" jdbcType="BIGINT" property="refundMerTranNo"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="phone_num" jdbcType="VARCHAR" property="phoneNum"/>
        <result column="refund_acct" jdbcType="VARCHAR" property="refundAcct"/>
        <result column="amount" jdbcType="VARCHAR" property="amount"/>
        <result column="mer_ptc_id" jdbcType="VARCHAR" property="merPtcId"/>
        <result column="trans_time" jdbcType="TIMESTAMP" property="transTime"/>
        <result column="tran_scene" jdbcType="VARCHAR" property="tranScene"/>
        <result column="currency" jdbcType="VARCHAR" property="currency"/>
        <result column="mer_refund_time" jdbcType="TIMESTAMP" property="merRefundTime"/>
        <result column="refund_order_no" jdbcType="VARCHAR" property="refundOrderNo"/>
        <result column="done_refund_amount" jdbcType="VARCHAR" property="doneRefundAmount"/>
        <result column="total_amount" jdbcType="VARCHAR" property="totalAmount"/>
        <result column="refund_amount" jdbcType="VARCHAR" property="refundAmount"/>
        <result column="pay_dsct_amount" jdbcType="VARCHAR" property="payDsctAmount"/>
        <result column="tran_content" jdbcType="VARCHAR" property="tranContent"/>
        <result column="refund_status" jdbcType="VARCHAR" property="refundStatus"/>
        <result column="order_status" jdbcType="VARCHAR" property="orderStatus"/>
    </resultMap>

    <insert id="insertList">
        INSERT INTO refund_fee_detail
            (refund_mer_tran_no,
            student_id,
            phone_num,
            refund_acct,
            amount,
            mer_ptc_id,
            trans_time,
            tran_scene,
            currency,
            mer_refund_time,
            refund_order_no,
            done_refund_amount,
            total_amount,
            refund_amount,
            pay_dsct_amount,
            tran_content,
            refund_status,
            order_status)
        VALUES
        <foreach collection="list" index="index" item="item" separator="," >
            (#{item.refundMerTranNo},
            #{item.studentId},
            #{item.phoneNum},
            #{item.refundAcct},
            #{item.amount},
            #{item.merPtcId},
            #{item.transTime},
            #{item.tranScene},
            #{item.currency},
            #{item.merRefundTime},
            #{item.refundOrderNo},
            #{item.doneRefundAmount},
            #{item.totalAmount},
            #{item.refundAmount},
            #{item.payDsctAmount},
            #{item.tranContent},
            #{item.refundStatus},
            #{item.orderStatus})
        </foreach>
    </insert>

    <!-- 如果有逻辑删除字段过滤，请写到这里 -->
    <sql id="filterRef">
        <!-- 这里必须加上全包名，否则当filterRef被其他Mapper.xml包含引用的时候，就会调用Mapper.xml中的该SQL片段 -->
        <include refid="com.course.app.webadmin.upms.dao.RefundFeeDetailMapper.inputFilterRef"/>
    </sql>

    <!-- 这里仅包含调用接口输入的主表过滤条件 -->
    <sql id="inputFilterRef">
        <if test="refundFeeDetailFilter != null">
        </if>
    </sql>

    <select id="getRefundFeeDetailList" resultMap="BaseResultMap" parameterType="com.course.app.webadmin.upms.model.RefundFeeDetail">
        SELECT * FROM refund_fee_detail
        <where>
            <include refid="filterRef"/>
        </where>
        <if test="orderBy != null and orderBy != ''">
            ORDER BY ${orderBy}
        </if>
    </select>
</mapper>
